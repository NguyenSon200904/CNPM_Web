const handleImportExcel = (event) => {
    const file = event.target.files[0];
    if (!file) {
      message.error("Vui lòng chọn file Excel!");
      return;
    }

    const reader = new FileReader();
    reader.onload = (e) => {
      try {
        const data = new Uint8Array(e.target.result);
        const workbook = XLSX.read(data, { type: "array" });
        const sheetName = workbook.SheetNames[0];
        const worksheet = workbook.Sheets[sheetName];
        const jsonData = XLSX.utils.sheet_to_json(worksheet);

        if (jsonData.length === 0) {
          message.error("File Excel trống!");
          return;
        }

        const errors = [];
        const newSelectedProducts = [...selectedProducts];

        jsonData.forEach((row, index) => {
          const maSanPham = row.maSanPham?.toString();
          const tenSanPham = row.tenSanPham?.toString();
          const soLuong = Number(row.soLuong);
          const gia = Number(row.gia);
          const loaiSanPham = row.loaiSanPham?.toString();

          if (
            !maSanPham ||
            !tenSanPham ||
            isNaN(soLuong) ||
            isNaN(gia) ||
            !loaiSanPham
          ) {
            errors.push(
              `Dòng ${
                index + 2
              }: Dữ liệu không hợp lệ (thiếu hoặc sai định dạng).`
            );
            return;
          }

          if (soLuong < 1) {
            errors.push(
              `Dòng ${
                index + 2
              }: Số lượng phải lớn hơn 0 (maSanPham: ${maSanPham}).`
            );
            return;
          }

          const product = products.find((p) => p.maSanPham === maSanPham);
          if (!product) {
            errors.push(
              `Dòng ${
                index + 2
              }: Sản phẩm không tồn tại (maSanPham: ${maSanPham}).`
            );
            return;
          }

          const existingProduct = newSelectedProducts.find(
            (item) => item.maSanPham === maSanPham
          );
          if (existingProduct) {
            existingProduct.quantity += soLuong;
          } else {
            newSelectedProducts.push({
              ...product,
              quantity: soLuong,
              id: maSanPham,
              name: tenSanPham,
              price: gia,
              loaiSanPham: loaiSanPham,
            });
          }
        });

        setSelectedProducts(newSelectedProducts);

        if (errors.length > 0) {
          message.warning(
            `Đã nhập thành công ${
              newSelectedProducts.length - selectedProducts.length
            } sản phẩm. Có ${errors.length} lỗi:\n${errors.join("\n")}`
          );
        } else {
          message.success(
            `Đã nhập thành công ${
              newSelectedProducts.length - selectedProducts.length
            } sản phẩm từ Excel!`
          );
        }
      } catch (error) {
        message.error("Lỗi khi đọc file Excel: " + error.message);
      }
    };

    reader.readAsArrayBuffer(file);
    event.target.value = null;
  };